<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>